import {ForwardRefExoticComponent} from 'react'
import {RefAttributes} from 'react'
import {SVGProps} from 'react'

/**
 * @public
 */
export declare const GroqLogo: ForwardRefExoticComponent<
  Omit<SVGProps<SVGSVGElement>, 'ref'> & RefAttributes<SVGSVGElement>
>

/**
 * @public
 */
export declare const GroqMonogram: ForwardRefExoticComponent<
  Omit<SVGProps<SVGSVGElement>, 'ref'> & RefAttributes<SVGSVGElement>
>

/**
 * @public
 */
export declare const SanityLogo: ForwardRefExoticComponent<
  Omit<SanityLogoProps & SVGProps<SVGSVGElement>, 'ref'> & RefAttributes<SVGSVGElement>
>

/**
 * @public
 */
export declare interface SanityLogoProps {
  dark?: boolean
}

/**
 * @public
 */
export declare const SanityMonogram: ForwardRefExoticComponent<
  (
    | Omit<
        {
          color: SanityMonogramColor
          scheme?: undefined
        } & Omit<SVGProps<SVGSVGElement>, 'color'>,
        'ref'
      >
    | Omit<
        {
          color?: undefined
          scheme: SanityMonogramScheme
        } & Omit<SVGProps<SVGSVGElement>, 'color'>,
        'ref'
      >
    | Omit<
        {
          color?: undefined
          scheme?: undefined
        } & Omit<SVGProps<SVGSVGElement>, 'color'>,
        'ref'
      >
  ) &
    RefAttributes<SVGSVGElement>
>

/**
 * @public
 * @deprecated use {@link SanityMonogramScheme} as the `scheme` prop instead
 */
export declare interface SanityMonogramColor {
  bg1: string
  /**
   * `bg2` is unused, use `bg1` instead
   */
  bg2: string
  fg: string
}

/**
 * @public
 */
export declare type SanityMonogramProps =
  | {
      color: SanityMonogramColor
      scheme?: undefined
    }
  | {
      color?: undefined
      scheme: SanityMonogramScheme
    }
  | {
      color?: undefined
      scheme?: undefined
    }

/**
 * @public
 */
export declare type SanityMonogramScheme = 'light' | 'dark' | 'default'

export {}
