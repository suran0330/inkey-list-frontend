import inquirer from 'inquirer';
import { groupProjectsByOrganization } from '../../actions/sanity/projects.js';
import { niceId } from './presenters.js';
/**
 * Prompt the user for a Project after selecting an Organization.
 * @param token - The Sanity API token
 * @returns The selected project, with the projectId and displayName
 * @throws {Error} If the user does not have any projects or if the API call fails
 */
export async function promptForProject({ token, knownOrganizationId, knownProjectId, }) {
    const { ok, error, organizations } = await groupProjectsByOrganization({ token });
    if (!ok) {
        throw new Error(error ?? 'Unknown error listing projects');
    }
    if (organizations.length === 0) {
        throw new Error('No Sanity projects found. Use `npx sanity init` to create one.');
    }
    let projects;
    if (organizations.length > 1) {
        const orgChoices = organizations.map(({ organization, projects }) => ({
            name: `"${organization.name}" ${niceId(organization.id)}`,
            value: { organization, projects },
            disabled: !projects || projects.length === 0 ? '(0 Projects)' : false,
        }));
        const { pickedOrganization } = await inquirer.prompt([
            {
                type: 'list',
                name: 'pickedOrganization',
                message: 'Which Organization would you like to use?',
                choices: orgChoices,
                default: knownOrganizationId,
            },
        ]);
        projects = pickedOrganization.projects;
    }
    else {
        projects = organizations[0].projects;
    }
    const projectChoices = projects.map(({ displayName, id: projectId }) => ({
        name: `"${displayName}" ${niceId(projectId)}`,
        value: { projectId, displayName },
    }));
    const { pickedProject } = await inquirer.prompt([
        {
            type: 'list',
            name: 'pickedProject',
            message: 'Which Project would you like to use?',
            choices: projectChoices,
            default: knownProjectId,
        },
    ]);
    return pickedProject;
}
