"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useLifecycleLogger = void 0;
var __1 = require("..");
/**
 * This hook provides a console log when the component mounts, updates and unmounts.
 *
 * @param componentName Provides the name of the component in which the life cycle is being logged
 * @param deps Dependencies list, as for `useEffect` hook
 */
function useLifecycleLogger(componentName, deps) {
    (0, __1.useMountEffect)(function () {
        console.log("".concat(componentName, " mounted"), __assign({}, deps));
        return function () { return console.log("".concat(componentName, " unmounted")); };
    });
    (0, __1.useUpdateEffect)(function () {
        console.log("".concat(componentName, " updated"), __assign({}, deps));
    }, deps);
}
exports.useLifecycleLogger = useLifecycleLogger;
