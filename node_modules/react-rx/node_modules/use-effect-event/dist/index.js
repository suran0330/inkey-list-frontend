import { useRef, useInsertionEffect } from "react";
function forbiddenInRender() {
  throw new Error("A function wrapped in useEffectEvent can't be called during rendering.");
}
function useEffectEvent(fn) {
  const ref = useRef(null);
  return ref.current = forbiddenInRender, useInsertionEffect(() => {
    ref.current = fn;
  }, [fn]), (...args) => {
    const latestFn = ref.current;
    return latestFn(...args);
  };
}
export {
  useEffectEvent
};
//# sourceMappingURL=index.js.map
