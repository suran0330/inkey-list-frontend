{"version":3,"file":"index.js","sources":["../src/useEffectEvent.ts"],"sourcesContent":["import {useInsertionEffect, useRef} from 'react'\n\nfunction forbiddenInRender() {\n  throw new Error(\"A function wrapped in useEffectEvent can't be called during rendering.\")\n}\n\n/**\n * This is a ponyfill of the upcoming `useEffectEvent` hook that'll arrive in React 19.\n * https://19.react.dev/learn/separating-events-from-effects#declaring-an-effect-event\n * To learn more about the ponyfill itself, see: https://blog.bitsrc.io/a-look-inside-the-useevent-polyfill-from-the-new-react-docs-d1c4739e8072\n * @public\n */\nexport function useEffectEvent<const T extends (...args: any[]) => void>(fn: T): T {\n  const ref = useRef<T | null>(null)\n  ref.current = forbiddenInRender as T\n\n  useInsertionEffect(() => {\n    ref.current = fn\n  }, [fn])\n\n  return ((...args: any) => {\n    const latestFn = ref.current!\n    return latestFn(...args)\n  }) as T\n}\n"],"names":[],"mappings":";AAEA,SAAS,oBAAoB;AACrB,QAAA,IAAI,MAAM,wEAAwE;AAC1F;AAQO,SAAS,eAAyD,IAAU;AAC3E,QAAA,MAAM,OAAiB,IAAI;AAC7B,SAAA,IAAA,UAAU,mBAEd,mBAAmB,MAAM;AACvB,QAAI,UAAU;AAAA,KACb,CAAC,EAAE,CAAC,GAEC,IAAI,SAAc;AACxB,UAAM,WAAW,IAAI;AACd,WAAA,SAAS,GAAG,IAAI;AAAA,EACzB;AACF;"}